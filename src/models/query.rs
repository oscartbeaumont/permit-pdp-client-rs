/*
 * Permit.io PDP
 *
 * The PDP (Policy decision point) container wraps Open Policy Agent (OPA) with a higher-level API intended for fine grained application-level authorization. The PDP automatically handles pulling policy updates in real-time from a centrally managed cloud-service (api.permit.io).
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Query {
    #[serde(rename = "user", deserialize_with = "Option::deserialize")]
    pub user: Option<serde_json::Value>,
    #[serde(rename = "action", deserialize_with = "Option::deserialize")]
    pub action: Option<serde_json::Value>,
    #[serde(rename = "resource")]
    pub resource: Box<models::ResourceV1>,
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<serde_json::Value>,
    #[serde(rename = "sdk", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sdk: Option<Option<serde_json::Value>>,
}

impl Query {
    pub fn new(user: Option<serde_json::Value>, action: Option<serde_json::Value>, resource: models::ResourceV1) -> Query {
        Query {
            user,
            action,
            resource: Box::new(resource),
            context: None,
            sdk: None,
        }
    }
}

