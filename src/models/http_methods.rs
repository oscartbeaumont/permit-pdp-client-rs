/*
 * Permit.io PDP
 *
 * The PDP (Policy decision point) container wraps Open Policy Agent (OPA) with a higher-level API intended for fine grained application-level authorization. The PDP automatically handles pulling policy updates in real-time from a centrally managed cloud-service (api.permit.io).
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// HttpMethods : An enumeration.
/// An enumeration.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum HttpMethods {
    #[serde(rename = "get")]
    Get,
    #[serde(rename = "post")]
    Post,
    #[serde(rename = "put")]
    Put,
    #[serde(rename = "patch")]
    Patch,
    #[serde(rename = "head")]
    Head,
    #[serde(rename = "delete")]
    Delete,

}

impl ToString for HttpMethods {
    fn to_string(&self) -> String {
        match self {
            Self::Get => String::from("get"),
            Self::Post => String::from("post"),
            Self::Put => String::from("put"),
            Self::Patch => String::from("patch"),
            Self::Head => String::from("head"),
            Self::Delete => String::from("delete"),
        }
    }
}

impl Default for HttpMethods {
    fn default() -> HttpMethods {
        Self::Get
    }
}

