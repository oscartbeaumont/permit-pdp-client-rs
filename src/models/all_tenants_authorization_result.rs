/*
 * Permit.io PDP
 *
 * The PDP (Policy decision point) container wraps Open Policy Agent (OPA) with a higher-level API intended for fine grained application-level authorization. The PDP automatically handles pulling policy updates in real-time from a centrally managed cloud-service (api.permit.io).
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AllTenantsAuthorizationResult {
    #[serde(rename = "allow", skip_serializing_if = "Option::is_none")]
    pub allow: Option<bool>,
    #[serde(rename = "query", skip_serializing_if = "Option::is_none")]
    pub query: Option<serde_json::Value>,
    #[serde(rename = "debug", skip_serializing_if = "Option::is_none")]
    pub debug: Option<serde_json::Value>,
    #[serde(rename = "result", skip_serializing_if = "Option::is_none")]
    pub result: Option<bool>,
    #[serde(rename = "tenant")]
    pub tenant: Box<models::TenantDetails>,
}

impl AllTenantsAuthorizationResult {
    pub fn new(tenant: models::TenantDetails) -> AllTenantsAuthorizationResult {
        AllTenantsAuthorizationResult {
            allow: None,
            query: None,
            debug: None,
            result: None,
            tenant: Box::new(tenant),
        }
    }
}

