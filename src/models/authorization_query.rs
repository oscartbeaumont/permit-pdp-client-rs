/*
 * Permit.io PDP
 *
 * The PDP (Policy decision point) container wraps Open Policy Agent (OPA) with a higher-level API intended for fine grained application-level authorization. The PDP automatically handles pulling policy updates in real-time from a centrally managed cloud-service (api.permit.io).
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// AuthorizationQuery : the format of is_allowed() input
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuthorizationQuery {
    #[serde(rename = "user")]
    pub user: Box<models::User>,
    #[serde(rename = "action")]
    pub action: String,
    #[serde(rename = "resource")]
    pub resource: Box<models::Resource>,
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<serde_json::Value>,
    #[serde(rename = "sdk", skip_serializing_if = "Option::is_none")]
    pub sdk: Option<String>,
}

impl AuthorizationQuery {
    /// the format of is_allowed() input
    pub fn new(user: models::User, action: String, resource: models::Resource) -> AuthorizationQuery {
        AuthorizationQuery {
            user: Box::new(user),
            action,
            resource: Box::new(resource),
            context: None,
            sdk: None,
        }
    }
}

