/*
 * Permit.io PDP
 *
 * The PDP (Policy decision point) container wraps Open Policy Agent (OPA) with a higher-level API intended for fine grained application-level authorization. The PDP automatically handles pulling policy updates in real-time from a centrally managed cloud-service (api.permit.io).
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// PolicyStoreDetails : represents a policy store endpoint - contains the policy store's: - location (url) - type - credentials
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PolicyStoreDetails {
    /// the type of policy store, currently only OPA is officially supported
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::PolicyStoreTypes>,
    /// the url that OPA can be found in. if localhost is the host - it means OPA is on the same hostname as OPAL client.
    #[serde(rename = "url")]
    pub url: String,
    /// optional access token required by the policy store
    #[serde(rename = "token", skip_serializing_if = "Option::is_none")]
    pub token: Option<String>,
}

impl PolicyStoreDetails {
    /// represents a policy store endpoint - contains the policy store's: - location (url) - type - credentials
    pub fn new(url: String) -> PolicyStoreDetails {
        PolicyStoreDetails {
            r#type: None,
            url,
            token: None,
        }
    }
}

